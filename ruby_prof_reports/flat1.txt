Measure Mode: wall_time
Thread ID: 80
Fiber ID: 60
Total: 1.690043
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 51.95      0.880     0.878     0.000     0.002     1000   Array#all?                     
 14.03      1.638     0.237     0.000     1.401       10   Array#each                     
 11.28      0.414     0.191     0.000     0.223     1696   Array#map                      
  5.39      0.173     0.091     0.000     0.082      846   <Class::Date>#parse            
  1.62      0.027     0.027     0.000     0.000     1155   String#split                   
  1.61      0.027     0.027     0.000     0.000     1692   Regexp#match                   
  1.60      0.027     0.027     0.000     0.000     2328   String#upcase                  
  1.36      0.023     0.023     0.000     0.000      846   Object#parse_session           /home/dekan/Work/Ruby/rails-optimization-examples/rails-optimization-task1/task-1.rb:25
  1.27      0.037     0.022     0.000     0.016      309   Array#sort                     
  1.08      0.018     0.018     0.000     0.000     1692   String#to_i                    
  0.93      0.016     0.016     0.000     0.000     1467   Date#<=>                       
  0.85      0.014     0.014     0.000     0.000     1078   Hash#merge                     
  0.80      0.014     0.014     0.000     0.000      846   String#gsub!                   
  0.71      0.012     0.012     0.000     0.000      846   MatchData#begin                
  0.70      0.012     0.012     0.000     0.000      846   Date#iso8601                   
  0.66      0.016     0.011     0.000     0.005      154   Array#any?                     
  0.66      0.011     0.011     0.000     0.000      846   String#[]=                     
  0.54      0.009     0.009     0.000     0.000      846   Integer#div                    
  0.53      0.009     0.009     0.000     0.000      846   MatchData#end                  
  0.43      0.011     0.007     0.000     0.003      154   Object#parse_user              /home/dekan/Work/Ruby/rails-optimization-examples/rails-optimization-task1/task-1.rb:15
  0.28      0.005     0.005     0.000     0.000      154   User#initialize                /home/dekan/Work/Ruby/rails-optimization-examples/rails-optimization-task1/task-1.rb:9
  0.23      0.009     0.004     0.000     0.005      154   Class#new                      
  0.20      0.003     0.003     0.000     0.000      308   String#+                       
  0.20      0.003     0.003     0.000     0.000      308   Integer#to_s                   
  0.17      0.003     0.003     0.000     0.000      155   Array#join                     
  0.12      0.002     0.002     0.000     0.000        1   JSON::Ext::Generator::GeneratorMethods::Hash#to_json 
  0.12      0.002     0.002     0.000     0.000        3   Array#flatten                  
  0.11      0.002     0.002     0.000     0.000      157   Array#count                    
  0.10      0.002     0.002     0.000     0.000      154   Array#reverse                  
  0.10      0.002     0.002     0.000     0.000        1   <Class::IO>#write              
  0.09      0.002     0.002     0.000     0.000      154   Array#sum                      
  0.09      0.002     0.002     0.000     0.000      154   Array#max                      
  0.06      1.690     0.001     0.000     1.689        1   Object#work                    /home/dekan/Work/Ruby/rails-optimization-examples/rails-optimization-task1/task-1.rb:43
  0.04      0.001     0.001     0.000     0.000        1   Array#uniq                     
  0.03      0.001     0.001     0.000     0.000        1   <Class::IO>#read               
  0.02      1.690     0.000     0.000     1.690        1   [global]#                      task.rb:9
  0.01      0.575     0.000     0.000     0.575        7   Object#collect_stats_from_users /home/dekan/Work/Ruby/rails-optimization-examples/rails-optimization-task1/task-1.rb:35
  0.00      0.000     0.000     0.000     0.000        3   Hash#values                    
  0.00      0.000     0.000     0.000     0.000        1   <Module::GC>#disable           <internal:gc>:63
  0.00      0.000     0.000     0.000     0.000        1   <Object::Object>#[]            
  0.00      0.000     0.000     0.000     0.000        1   JSON::Ext::Generator::State#initialize 

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
